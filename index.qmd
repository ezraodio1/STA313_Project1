---
title: "Taylor Swift (Soon-to-be Kelce)"
subtitle: "STA/ISS 313 - Project 1"
author: "Team Robots ðŸ¤–"
format: html
editor: visual
---

## Abstract

(1 paragraph): Project abstract.

------------------------------------------------------------------------

## Introduction

This project analyzes the Taylor Swift R package, which was created by W. Jake Thompson. The data comes from Genius and the Spotify API. The data set includes three .csv files: taylor_album_songs, taylor_all_songs, and taylor_albums. In our project, we only are only using the taylor_all_songs and taylor_albums data frames. This is because taylor_album_songs excludes singles releases and excludes the original releases of albums that now have a Taylor-owned alternative in support of artists wanting to own their own music; in our project, we wanted to include the original releases so we could compare them to the re-releases, and overall, provide a holistic analysis of Taylor Swift overtime. Additionally, this project uses the taylor_albums dataset - in order to have data about each albums as a whole.

This project seeks to investigate two questions: The first being: How do Taylor Swiftâ€™s single releases differ from the songs on the full albums? Second, we explore: How have Taylor Swiftâ€™s songs changed over time? The variables used to answer these questions are from the two .csv files mentioned above. From taylor_albums, we used : album_name (Album name), album_release (Album release date), metacritic_score (Metacritic score), and user_score (User score). From taylor_all_songs, we used : album_name (Album name), album_release (Album release date), single_release (Single release date), energy (Spotify energy score - a measure from 0.0 to 1.0 that represents a perceptual measure of intensity and activity), valence (Spotify valence score from 0.0 to 1.0 - high valence sounds more positive, while low valence sounds more negative), and tempo (The overall estimated tempo of a track in beats per minute). More information about the data sets can be found in the README file.

## **Question 1**: How do Taylor Swiftâ€™s single releases differ from the songs on the full albums?

### Introduction

Choosing what songs to release as the singles before an album comes out is a key piece of strategy for any artist. The single should be a good representative of the album as a whole, should be very popular, and should leave the listener eager to hear the entire album. Many of Taylor Swift's most well known songs are her single releases, so we decided to see how her singles compare to the rest of her songs. We are interested to see if we can identify some components or aspects of songs that make them better candidates to be single releases, and in this way, we can understand Taylor Swift and her team's decision making process in a new way. To answer this question, we will use only the taylor_all_songs .csv file. Specifically, we will use the energy and tempo variables to compare single releases to album releases

### Approach

For the first plot, we use a barplot (geom_col) to compare the energy levels of songs, faceted based on whether the songs came out on a single release or on the regular album release. We chose this plot because it is makes it easy to compare the single energy values to the regular album energy values. Additionally, it makes it easy enables the reader to compare the energy values of singles or from albums across all of Taylor Swift's releases. We thought this would be a great visualization strategy because of how easy these comparisons can be made. For example, we can see that, on average, the single releases from the album 1989 were .09 higher than that of the 1989 album. Also, we can see that the single releases of Fearless (Taylor's Version) and the single releases from the original Fearless have a difference of .15 in their energy score.

For the second plot, we use a Ridgeline plot (geom_density_ridges) to compare the tempo of songs released on an album versus as a single release. For this visualization, we chose a ridgeline plot because of the way it conveys the distribution of songs over the tempo range. With the two curves on the same plot, it makes it easy to see where they trend similarly and where they are different. This choice of ridgeline is great because it enables the reader to visualize how Taylor Swift's songs range in tempo based on their method of release.

### Analysis

Load in Packages and Data

```{r}
#| label: question1-load-pkgs-and-data

library(tidyverse)
library(ggridges)

taylor_all_songs <- readr::read_csv('data/taylor_all_songs.csv', show_col_types = FALSE)
taylor_albums <- readr::read_csv('data/taylor_albums.csv', show_col_types = FALSE)


```

Plot 1 (wrangle and plot)

```{r}
#| label: question1a-wrangle-and-plot

taylor_all_songs_including_singles <- taylor_all_songs |>
  drop_na(album_name) |>
  mutate(is_single = !(is.na(single_release)))

taylor_albums_energy <- taylor_all_songs_including_singles |>
  drop_na(energy) |>
  filter(is_single == FALSE) |>
  group_by(album_name) |>
  summarise(album_energy = mean(energy))

taylor_singles_energy <- taylor_all_songs_including_singles |>
  drop_na(energy) |>
  filter(is_single == TRUE) |>
  group_by(album_name) |>
  summarise(singles_energy = mean(energy))


plot1a_data <- merge(taylor_albums_energy, taylor_singles_energy)


plot1a_data <- plot1a_data |>
  pivot_longer(
    cols = c("album_energy", "singles_energy"),
    names_to = "song_type",
    values_to = "energy"
  ) |>
  mutate(
    song_type = fct_recode(song_type, "Album" = "album_energy", "Single" = "singles_energy")
  )

plot1a_data <- plot1a_data |>
  mutate(album_name = factor(album_name, levels = c("Taylor Swift", "Fearless",  "Fearless (Taylor's Version)",
                                                    "Speak Now", "Red", "1989", "reputation",
                                                    "Lover", "folklore", "evermore", "Midnights")))

#| fig-alt: |
#|   This figure is a bar chart titled "Energy Values of Taylor 
#|   Swift Albums Versus Single Releases" that displays the energy of all
#|   of Taylor Swifts songs from each of her albums, compared to the singles
#|   off of each of those albums. Each bar represents the average energy score
#|   of one album, listed in chronoligcal order. Each album is colored to
#|   represent the main color of the album. The plot shows that the single
#|   release songs generally tend to have a higher energy score than the 
#|   overall energy score of the album.

ggplot(plot1a_data, aes(x = album_name, y = energy, fill = album_name)) +
  geom_col(position = "dodge") +
  geom_text(aes(label = round(energy, 2)), position = position_dodge(width = 0.9), vjust = -0.5, size = 2) +
  facet_wrap(~song_type) +
  scale_fill_manual(values = c("#4497BA", "#BD9365", "#5F4A30", "#704073",
                               "#982F47", "#7B96AF", "#0A0A0A", "#DEA9C9",
                               "#4D4D4D", "#ACA38D", "#A26A5B")) +
  theme_bw() +
  theme(axis.text.x = element_blank(),
        axis.ticks.x = element_blank()) +
  labs(
    title = "Energy Values of Taylor Swift Albums Versus Single Releases",
    subtitle = "Colored by Album",
    x = "Albums",
    y = "Energy",
    fill = "Album",
    caption = "Source: Tidy Tuesday Data"
  )

```

Plot 2 (wrangle and plot)

```{r}
#| label: question1b-wrangle-and-plot

plot1b_data <- taylor_all_songs_including_singles |>
  drop_na(tempo)

#| fig-alt: |
#|   This figure is a density ridge plot titled "Tempo Distribution of Taylor Swift Songs"
#|   that dcompares the tempo of 47 single released
#|   songs versus 191 songs released on Swift's albums. The single release density
#|   ridge is right-skewed with a peak around a tempo of 90, while the album
#|   released ridge is more normally distributed with a peak around 120 tempo.
#|   The album released songs also have songs with over a 200 tempo, while the
#|   single realeased songs do not.

ggplot(plot1b_data, aes(x = tempo, y = is_single, fill = is_single)) +
  geom_density_ridges(show.legend = FALSE) +
  scale_fill_manual(values = c("#4D4D4D", "#DEA9C9")) +
  scale_y_discrete(labels = c("Album", "Single")) +
  theme_bw() +
  labs(
    title = "Tempo Distribution of Taylor Swift Songs",
    subtitle = "191 songs appearing only on an album versus 47 single releases",
    x = "Tempo",
    y = "Release Type",
    caption = "Source: Tidy Tuesday Data"
  ) 
```

```{r}
#| label: data_for_writeup

plot1a_data_for_writeup <- plot1a_data |> 
  group_by(album_name) |>
  summarise(album_energy = energy[song_type == "Album"],
            single_energy = energy[song_type == "Single"]) |>
  filter(album_energy > single_energy)

overall_averages <- plot1a_data |>
  group_by(song_type) |>
  summarise(average_energy = mean(energy))

average_energy_album <- overall_averages$average_energy[overall_averages$song_type == "Album"]
average_energy_single <- overall_averages$average_energy[overall_averages$song_type == "Single"]
```

### Discussion

The faceted bar chart illustrates that average energy scores of Taylor Swift's singles on her albums are generally higher than the average energy scores of album-only songs. In fact, out of the `{r} nrow(plot1a_data)/2` albums analyzed, only `{r} nrow(plot1a_data_for_writeup)` albums have a lower average singles energy than average album-only-songs energy. Those albums are `{r} paste(plot1a_data_for_writeup$album_name, collapse = " and ")`. In fact, the difference between the average energy of singles and album-only songs was `{r} round(average_energy_single - average_energy_album, digits = 2)`, meaning that the average energy of singles was `{r} round(100*(average_energy_single - average_energy_album)/average_energy_album, digits = 2)` percent higher than the average energy of album-only songs.

The

plot 2 blah blah, it is evident that the curves for single released songs and album released songs share a general shape.

## **Question 2**: How have Taylor Swift's songs changed over time?

### Introduction

One of the most incredible things about Taylor Swift is the longevity of her career and the evolution of her artist identity. She has created country music, pop music, folk music, etc. Additionally, she started her career at an notably young age. Her first album, Taylor Swift, came out in 2006 when the artist was merely 16 years old. Today, she is still making music. This sparked our interest in how her songs have changed overtime. Moreover, with Taylor's recent re-recordings, we wanted to look at how those re-recordings performed relative to the original recordings. We look at this question through two separate lenses: how has Taylor's literal music changed over time through attributes, such as energy and valence; and how Taylor's re-recordings of her albums vary in scores from critics and meta-scoring.

To do this, we used the taylor_all_songs and the taylor_albums .csv files. Specifically, we use the energy and valence variables from the taylor_all_songs data frame, and the user_score and metacritic_score from the taylor_albums data frame.

### Approach

For plot 1, we overlaid a line graph (geom_line), a scatter plot (geom_point), and added a trend line (geom_smooth) to portray how the valence and energy have changed in Taylor Swift's music over time. We chose to do so with a line graph, with each point emphasized and a trend line - indicating the trajectory of her music overtime. This plot is particularly great for observing this trend because each point is clear, which album it is, and you can see clearly how each album compares to the others.

For plot 2, we used a bar graph (geom_col). In this plot, we wanted to address the differences in how Taylor Swift's re-releases scored relative to their original releases. We chose to do this with a faceted bar graph, because it makes very easy to compare the metacritic versus user scores. This is a very good plot to vizualize this data because the trends between Taylor's Version and the original Version are very accessible to the reader.

### Analysis

Load in Packages and Data

```{r}
#| label: question2-load-pkgs-and-data

library(tidyverse)
library(ggrepel)

taylor_all_songs <- readr::read_csv('data/taylor_all_songs.csv', show_col_types = FALSE)
taylor_albums <- readr::read_csv('data/taylor_albums.csv', show_col_types = FALSE)
```

Plot 1 (wrangle and plot)

```{r}
#| label: question2a-wrangle-and-plot

# the wrangle
taylor_albums_stats <- taylor_all_songs |>
  drop_na(energy, valence) |>
  group_by(album_name) |>
  summarise(
    album_energy = mean(energy),
    album_valence = mean(valence)
  )

plot2a_data <- merge(taylor_albums, taylor_albums_stats)

plot2a_data <- plot2a_data |>
  pivot_longer(
    cols = c("album_energy", "album_valence"),
    names_to = "song_attribute",
    values_to = "attribute_value"
  ) |>
  mutate(
    song_attribute = fct_recode(song_attribute, "energy" = "album_energy", "valence" = "album_valence"),
    album_name = factor(album_name, 
                        levels = c("Midnights",  "evermore", "folklore",
                                   "Lover", "reputation", "1989", 
                                   "Red", "Speak Now", 
                                   "Fearless (Taylor's Version)", 
                                   "Fearless", "Taylor Swift", 
                                   "The Taylor Swift Holiday Collection",
                                   "Red (Taylor's Version)"))
  )

#| fig-alt: |
#|   This figure is a point and line plot titled "Taylor Swift album attributes over time"
#|   that displays the average energy and valence values of each Taylor swift album along 
#|   the date at which the album was released. Each album is represented by a point, 
#|   colored to match the album cover, and labeled witht eh album name. Also, each point
#|   is connected by a line to show the change from one album to the next in terms of 
#|   energy/valence respectively. Under each set of albums is a dotted red line that displays
#|   the average change over time among each of these values. The red dotted line along
#|   with the rest of the plot show that there is a slight decrease, but seemingly 
#|   insignificant, decrease in both energy and valence scores of her albums over time.

#the plot
ggplot(plot2a_data, aes(x = album_release)) +
  geom_line(aes(y = attribute_value), color = "#4D4D4D", size = 2) +
  geom_point(aes(y = attribute_value, color = album_name), size = 7, shape = 18) +
  geom_smooth(aes(y = attribute_value), method = "lm", se = FALSE, color = "#E3183790", size =2, linetype = "dashed") +
  geom_label_repel(aes(y = attribute_value, label = album_name, fill = album_name), color = "white", size = 3, 
                   nudge_y = 0.1, nudge_x = 100) +
  scale_y_continuous(breaks = seq(0.0, 1.0, by = 0.1), limits = c(0, 1)) +
  scale_x_date(date_breaks = "1 year", date_labels = "%Y") +
  scale_color_manual(values = c("#A26A5B", "#ACA38D", "#4D4D4D", "#DEA9C9", 
                               "#0A0A0A", "#7B96AF", "#982F47", "#704073", 
                               "#5F4A30", "#BD9365", "#4497BA", "#BA372E", "#903F31")) +
  scale_fill_manual(values = c("#A26A5B", "#ACA38D", "#4D4D4D", "#DEA9C9", 
                               "#0A0A0A", "#7B96AF", "#982F47", "#704073", 
                               "#5F4A30", "#BD9365", "#4497BA", "#BA372E", "#903F31")
  ) +
  labs(
    title = "Taylor Swift album attributes over time",
    x = "Album Release Date",
    caption = "Source: Tidy Tuesday Data"
  ) +
  theme_bw() +
  theme(
    axis.title.y = element_blank(),
    panel.grid.minor = element_blank(),
    legend.position = "none",
    plot.title = element_text(size = 15, face = "bold", hjust = 0.5),
    axis.title.x = element_text(vjust = -1, size = 12),
    strip.text = element_text(size = 12)
  ) +
  facet_wrap(~song_attribute, ncol = 1, labeller = 
               labeller(song_attribute = c(energy = "Attribute: Energy", valence = "Attribute: Valence"))
  )




```

Plot 2 (wrangle and plot)

```{r}
#| label: question2b-wrangle-and-plot

#the wrangle
original_and_rereleased_albums <- c("Red", "Red (Taylor's Version)", "Fearless", "Fearless (Taylor's Version)")

plot2b_data <- subset(taylor_albums, album_name %in% original_and_rereleased_albums) |>
  mutate(user_score = user_score*10, 
         taylor_owned = ifelse(grepl("Taylor's Version", album_name), "Taylor's Version", "Scooter Owned"), 
         album = case_when(grepl("Red", album_name) ~ "Red", 
                           grepl("Fearless", album_name) ~ "Fearless", 
                           TRUE ~ "" )) |>
  select(album, metacritic_score, user_score, taylor_owned) 

plot2b_data <- plot2b_data |>
  pivot_longer(
    cols = c("metacritic_score", "user_score"), 
         names_to = "score_type", 
         values_to = "score") |>
  mutate(
    score_type = fct_recode(score_type, "metacritic" = "metacritic_score", "user" = "user_score")
  )

#| fig-alt: |
#|   This figure is a bar plot titled "Original versus Taylor's Score Comparison"
#|   that displays 8 total bars, each representing a different score value. On the 
#|   left side of the plot, it dsiplays the user and metacritic score for both the 
#|   original version of Fearless and the "Taylor's Version" of Fearless. On the right,
#|   the same but this time for the two versions of the album Red. On top
#|   of each bar is the score for the plots. The plot shows that all of the Taylor's Version
#|   score higher than the original version for both metacritic and user scores.

#the plot
ggplot(plot2b_data, aes(x= score_type, y = score, fill = taylor_owned)) + 
  geom_col(position = "dodge") + 
  geom_text(aes(label = score), position = position_dodge(width = 0.9), vjust = -0.5, size = 3 ) +
  facet_wrap(~album)+ 
  scale_fill_manual(values = c("#4D4D4D", "#DEA9C9")) +
  theme_bw() +
  labs(
    title = "Original versus Taylor's Score Comparison",
    x = "Type of Score",
    y = "Score",
    fill = "Taylor's Version?",
    caption = "Source: Tidy Tuesday Data"
  )


```

### Discussion

(1-3 paragraphs): In the Discussion section, interpret the results of your analysis. Identify any trends revealed (or not revealed) by the plots. Speculate about why the data looks the way it does.
