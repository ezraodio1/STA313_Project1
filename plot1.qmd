---
title: "Taylor Swift (Soon-to-be Kelce)"
subtitle: "Plot1"
format: html
editor: visual
---

```{r}
#| label: load-pkgs
#| message: false

library(tidyverse)
library(ggridges)

```

```{r}
#| label: load-data
#| message: false

taylor_album_songs <- readr::read_csv('data/taylor_album_songs.csv', show_col_types = FALSE)
taylor_all_songs <- readr::read_csv('data/taylor_all_songs.csv', show_col_types = FALSE)
taylor_albums <- readr::read_csv('data/taylor_albums.csv', show_col_types = FALSE)

```

```{r}
#| label: edit-data
#| message: false

taylor_all_songs <- taylor_all_songs |>
  drop_na(album_name) |>
  mutate(is_single = !(is.na(single_release)))


taylor_albums_energy <- taylor_all_songs |>
  drop_na(energy) |>
  group_by(album_name) |>
  summarise(album_energy = mean(energy))

taylor_singles_energy <- taylor_all_songs %>%
  filter(is_single == TRUE) %>%
  group_by(album_name) %>%
  summarise(singles_energy = mean(energy))


plot1a_data <- merge(taylor_albums_energy, taylor_singles_energy)


plot1a_data <- plot1a_data |>
  pivot_longer(
    cols = c("album_energy", "singles_energy"),
    names_to = "song_type",
    values_to = "energy"
  ) |>
  mutate(
    song_type = fct_recode(song_type, "Album" = "album_energy", "Single" = "singles_energy")
  )



```

```{r}
#| label: create-plot1
#| message: false



plot1a_data <- plot1a_data |>
  mutate(album_name = factor(album_name, levels = c("Taylor Swift", "Fearless",  "Fearless (Taylor's Version)",
                                                    "Speak Now", "Red", "1989", "reputation",
                                                    "Lover", "folklore", "evermore", "Midnights")))


#| fig-alt: |
#|   This figure is a bar chart titled "Energy Values of Taylor 
#|   Swift Albums Versus Single Releases" that displays the energy of all
#|   of Taylor Swifts songs from each of her albums, compared to the singles
#|   off of each of those albums. Each bar represents the average energy score
#|   of one album, listed in chronoligcal order. Each album is colored to
#|   represent the main color of the album. The plot shows that the single
#|   release songs generally tend to have a higher energy score than the 
#|   overall energy score of the album.


ggplot(plot1a_data, aes(x = album_name, y = energy, fill = album_name)) +
  geom_col(position = "dodge") +
  geom_text(aes(label = round(energy, 2)), position = position_dodge(width = 0.9), vjust = -0.5, size = 2) +
  facet_wrap(~song_type) +
  scale_fill_manual(values = c("#4497BA", "#BD9365", "#5F4A30", "#704073",
                               "#982F47", "#7B96AF", "#0A0A0A", "#DEA9C9",
                               "#4D4D4D", "#ACA38D", "#A26A5B")) +
  theme_bw() +
  theme(axis.text.x = element_blank(),
        axis.ticks.x = element_blank()) +
  labs(
    title = "Energy Values of Taylor Swift Albums Versus Single Releases",
    subtitle = "Colored by Album",
    x = "Albums",
    y = "Energy",
    fill = "Album",
    caption = "Source: Tidy Tuesday Data"
  )

#make sure that the values are readable on a screen
```

```{r}
#| label: create-plot2
#| message: false

plot1b_data <- taylor_all_songs |>
  drop_na(tempo)


#| fig-alt: |
#|   This figure is a density ridge plot titled "Tempo Distribution of Taylor Swift Songs"
#|   that dcompares the tempo of 47 single released
#|   songs versus 191 songs released on Swift's albums. The single release density
#|   ridge is right-skewed with a peak around a tempo of 90, while the album
#|   released ridge is more normally distributed with a peak around 120 tempo.
#|   The album released songs also have songs with over a 200 tempo, while the
#|   single realeased songs do not.
#|   

ggplot(plot1b_data, aes(x = tempo, y = is_single, fill = is_single)) +
  geom_density_ridges(show.legend = FALSE) +
  scale_fill_manual(values = c("#4D4D4D", "#DEA9C9")) +
  scale_y_discrete(labels = c("Album", "Single")) +
  theme_bw() +
  labs(
    title = "Tempo Distribution of Taylor Swift Songs",
    subtitle = "191 songs appearing only on an album versus 47 single releases",
    x = "Tempo",
    y = "Release Type",
    caption = "Source: Tidy Tuesday Data"
  )
```
