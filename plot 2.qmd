---
title: "Taylor Swift (Soon-to-be Kelce)"
subtitle: "Plot2"
format: html
editor: visual
---

```{r}
#| label: load-pkgs
#| message: false

library(tidyverse)
```

```{r}
#| label: load-data
#| message: false

taylor_album_songs <- readr::read_csv('data/taylor_album_songs.csv', show_col_types = FALSE)
taylor_all_songs <- readr::read_csv('data/taylor_all_songs.csv', show_col_types = FALSE)
taylor_albums <- readr::read_csv('data/taylor_albums.csv', show_col_types = FALSE)
```

```{r}
#| label: create_dataframe_for_plot2a

taylor_albums_stats <- taylor_all_songs |>
  drop_na(energy, danceability, speechiness, acousticness, valence) |>
  group_by(album_name) |>
  summarise(
    album_energy = mean(energy),
    album_danceability = mean(danceability),
    album_speechiness = mean(speechiness),,
    album_valence = mean(valence)
  )

taylor_albums_plot2a <- merge(taylor_albums, taylor_albums_stats)

```

```{r}
#| experimental_plot

ggplot(taylor_albums_plot2a, aes(x = album_release)) +
  geom_point(aes(y = album_energy), color = "red") +
  geom_point(aes(y = album_danceability), color = "blue") +
  geom_point(aes(y = album_speechiness), color = "green") +
  geom_point(aes(y = album_valence), color = "purple") +
  geom_line(aes(y = album_energy), color = "red") +
  geom_line(aes(y = album_danceability), color = "blue") +
  geom_line(aes(y = album_speechiness), color = "green") +
  geom_line(aes(y = album_valence), color = "purple") +
  geom_smooth(aes(y = album_energy), method = "lm", se = FALSE, color = "pink") +
  geom_smooth(aes(y = album_danceability), method = "lm", se = FALSE, color = "pink") +
  geom_smooth(aes(y = album_speechiness), method = "lm", se = FALSE, color = "pink") +
  geom_smooth(aes(y = album_valence), method = "lm", se = FALSE, color = "pink")
```

```{r fig.height = 8, fig.width = 11}
#| label: highlight_energy_plot

ggplot(taylor_albums_plot2a, aes(x = album_release)) +
  geom_point(aes(y = album_danceability), color = "gray") +
  geom_point(aes(y = album_speechiness), color = "gray") +
  geom_point(aes(y = album_valence), color = "gray") +
  geom_line(aes(y = album_danceability), color = "gray") +
  geom_line(aes(y = album_speechiness), color = "gray") +
  geom_line(aes(y = album_valence), color = "gray") +
  geom_point(aes(y = album_energy), color = "red", size = 3) +
  geom_line(aes(y = album_energy), color = "red", size = 1.4) +
  geom_smooth(aes(y = album_energy), method = "lm", se = FALSE, color = "pink", alpha = 0.5) +
  geom_text(aes(y = album_energy, label = album_name), color = "blue", size = 3, vjust = -1) +
  scale_y_continuous(breaks = seq(0.0, 1.0, by = 0.1), limits = c(0, 1)) +
  scale_x_date(date_breaks = "1 year", date_labels = "%Y") +
  labs(
    title = "Change over time of energy in Taylor Swift albums",
    x = "Album Release Date"
  ) +
  theme_minimal() +
  theme(
    axis.title.y = element_blank(),
    panel.grid.minor = element_blank(),
  )

```

```{r}
#| label: data-wrangle-plot2b

#Albums we want to consider for plot 2b (only albums in Tidy Data with original & re-released)
original_and_rereleased_albums <- c("Red", "Red (Taylor's Version)", "Fearless", "Fearless (Taylor's Version)")

#Wrangling the data for plot 2b
plot2b_data <- subset(taylor_albums, album_name %in% original_and_rereleased_albums) |>
  mutate(user_score = user_score*10, 
         taylor_owned = ifelse(grepl("Taylor's Version", album_name), "Taylor's Version", "Scooter Owned"), 
         album = case_when(grepl("Red", album_name) ~ "Red", 
                           grepl("Fearless", album_name) ~ "Fearless", 
                           TRUE ~ "" )) |>
  select(album, metacritic_score, user_score, taylor_owned) 

#Pivoting longer to be able to put score on y-axis for plot 2b
plot2b_data <- plot2b_data |>
  pivot_longer(
    cols = c("metacritic_score", "user_score"), 
         names_to = "score_type", 
         values_to = "score") |>
  mutate(
    score_type = fct_recode(score_type, "metacritic" = "metacritic_score", "user" = "user_score")
  )


```

```{r}
#| label: plot2b-plotting

ggplot(plot2b_data, aes(x= score_type, y = score, fill = taylor_owned)) + 
  geom_col(position = "dodge") + 
  geom_text(aes(label = score), position = position_dodge(width = 0.9), vjust = -0.5, size = 3 ) +
  facet_wrap(~album)+ 
  scale_fill_manual(values = c("#4D4D4D", "#DEA9C9")) +
  theme_bw() +
  labs(
    title = "Original versus Taylor's Score Comparison",
    x = "Type of Score",
    y = "Score",
    fill = "Taylor's Version?",
    caption = "Source: Tidy Tuesday Data"
  )


```
